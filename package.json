{
    "name": "amazonaws-com-organizations-connector",
    "version": "2016.0.0",
    "description": "AWS Organizations API Reference AWS Organizations is a web service that enables\nyou to consolidate your multiple AWS accounts into an organization and centrally\nmanage your accounts and their resources.\n\nThis guide provides descriptions of the Organizations API. For more information\nabout using this service, see the AWS Organizations User Guide\n[https://docs.aws.amazon.com/organizations/latest/userguide/orgs_introduction.html]\n.\n\n API Version \n\nThis version of the Organizations API Reference documents the Organizations API\nversion 2016-11-28.\n\nAs an alternative to using the API directly, you can use one of the AWS SDKs,\nwhich consist of libraries and sample code for various programming languages and\nplatforms (Java, Ruby, .NET, iOS, Android, and more). The SDKs provide a\nconvenient way to create programmatic access to AWS Organizations. For example,\nthe SDKs take care of cryptographically signing requests, managing errors, and\nretrying requests automatically. For more information about the AWS SDKs,\nincluding how to download and install them, see Tools for Amazon Web Services\n[http://aws.amazon.com/tools/].\n\nWe recommend that you use the AWS SDKs to make programmatic API calls to\nOrganizations. However, you also can use the Organizations Query API to make\ndirect calls to the Organizations web service. To learn more about the\nOrganizations Query API, see Making Query Requests\n[https://docs.aws.amazon.com/organizations/latest/userguide/orgs_query-requests.html] \nin the AWS Organizations User Guide. Organizations supports GET and POST\nrequests for all actions. That is, the API does not require you to use GET for\nsome actions and POST for others. However, GET requests are subject to the\nlimitation size of a URL. Therefore, for operations that require larger sizes,\nuse a POST request.\n\n Signing Requests \n\nWhen you send HTTP requests to AWS, you must sign the requests so that AWS can\nidentify who sent them. You sign requests with your AWS access key, which\nconsists of an access key ID and a secret access key. We strongly recommend that\nyou do not create an access key for your root account. Anyone who has the access\nkey for your root account has unrestricted access to all the resources in your\naccount. Instead, create an access key for an IAM user account that has\nadministrative privileges. As another option, use AWS Security Token Service to\ngenerate temporary security credentials, and use those credentials to sign\nrequests. \n\nTo sign requests, we recommend that you use Signature Version 4\n[https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html]. If you\nhave an existing application that uses Signature Version 2, you do not have to\nupdate it to use Signature Version 4. However, some operations now require\nSignature Version 4. The documentation for operations that require version 4\nindicate this requirement. \n\nWhen you use the AWS Command Line Interface (AWS CLI) or one of the AWS SDKs to\nmake requests to AWS, these tools automatically sign the requests for you with\nthe access key that you specify when you configure the tools.\n\nIn this release, each organization can have only one root. In a future release,\na single organization will support multiple roots.\n\n Support and Feedback for AWS Organizations \n\nWe welcome your feedback. Send your comments to \nfeedback-awsorganizations@amazon.com [feedback-awsorganizations@amazon.com] or\npost your feedback and questions in the AWS Organizations support forum\n[http://forums.aws.amazon.com/forum.jspa?forumID=219]. For more information\nabout the AWS support forums, see Forums Help\n[http://forums.aws.amazon.com/help.jspa].\n\n Endpoint to Call When Using the CLI or the AWS API \n\nFor the current release of Organizations, you must specify the us-east-1 region\nfor all AWS API and CLI calls. You can do this in the CLI by using these\nparameters and commands:\n\n *  Use the following parameter with each command to specify both the endpoint\n   and its region:\n   \n    --endpoint-url https://organizations.us-east-1.amazonaws.com \n   \n   \n *  Use the default endpoint, but configure your default region with this\n   command:\n   \n    aws configure set default.region us-east-1 \n   \n   \n *  Use the following parameter with each command to specify the endpoint:\n   \n    --region us-east-1 \n   \n   \n\nFor the various SDKs used to call the APIs, see the documentation for the SDK of\ninterest to learn how to direct the requests to a specific endpoint. For more\ninformation, see Regions and Endpoints\n[https://docs.aws.amazon.com/general/latest/gr/rande.html#sts_region] in the AWS\nGeneral Reference. \n\n How examples are presented \n\nThe JSON returned by the AWS Organizations service as response to your requests\nis returned as a single long string without line breaks or formatting\nwhitespace. Both line breaks and whitespace are included in the examples in this\nguide to improve readability. When example input parameters also would result in\nlong strings that would extend beyond the screen, we insert line breaks to\nenhance readability. You should always submit the input as a single JSON text\nstring.\n\n Recording API Requests \n\nAWS Organizations supports AWS CloudTrail, a service that records AWS API calls\nfor your AWS account and delivers log files to an Amazon S3 bucket. By using\ninformation collected by AWS CloudTrail, you can determine which requests were\nsuccessfully made to Organizations, who made the request, when it was made, and\nso on. For more about AWS Organizations and its support for AWS CloudTrail, see \nLogging AWS Organizations Events with AWS CloudTrail\n[https://docs.aws.amazon.com/organizations/latest/userguide/orgs_monitoring.html#orgs_cloudtrail-integration] \nin the AWS Organizations User Guide. To learn more about CloudTrail, including\nhow to turn it on and find your log files, see the AWS CloudTrail User Guide\n[https://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html]\n.",
    "main": "component.json",
    "dependencies": {
        "elasticio-node": "0.0.9",
        "elasticio-sailor-nodejs": "^2.2.1",
        "swagger-client": "^3.8.22"
    },
    "author": {
        "name": "Deutsche Telekom AG"
    },
    "license": "Apache-2.0"
}